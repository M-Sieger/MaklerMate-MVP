# üìÑ Environment Variables ‚Äì MaklerMate-MVP

# ==============================================================================
# FRONTEND (React) ‚Äì f√ºr lokale Entwicklung und Production
# ==============================================================================

# üîê Supabase Authentication & Database
# Registriere ein kostenloses Projekt auf https://supabase.com/dashboard
# Diese Keys sind "public-safe" (Row-Level-Security in Supabase aktiviert)

REACT_APP_SUPABASE_URL=https://your-project-id.supabase.co
REACT_APP_SUPABASE_ANON_KEY=your-anon-key-here

# Hinweis: Der ANON_KEY ist public-safe und kann im Frontend-Code verwendet werden.
# Supabase sch√ºtzt Daten mit Row-Level-Security (RLS).


# ==============================================================================
# BACKEND (Server) ‚Äì nur f√ºr lokale Entwicklung (server/gpt-proxy.js)
# ==============================================================================

# üß† OpenAI API Key
# Erstelle einen API-Key auf https://platform.openai.com/api-keys
# ‚ö†Ô∏è WICHTIG: Dieser Key DARF NICHT im Frontend verwendet werden!
# Er wird nur im lokalen Express-Server (server/gpt-proxy.js) ben√∂tigt.

OPENAI_API_KEY=sk-your-openai-api-key-here

# üåê Express Server Port (optional, default: 5001)
PORT=5001


# ==============================================================================
# VERCEL (Production) ‚Äì √ºber Vercel Dashboard konfigurieren
# ==============================================================================

# Die folgenden Variablen m√ºssen im Vercel Dashboard unter:
# "Settings ‚Üí Environment Variables" hinzugef√ºgt werden:
#
# 1. OPENAI_API_KEY (wie oben)
# 2. SUPABASE_URL (wie REACT_APP_SUPABASE_URL, aber ohne REACT_APP_ Pr√§fix)
# 3. SUPABASE_ANON_KEY (wie REACT_APP_SUPABASE_ANON_KEY, aber ohne REACT_APP_ Pr√§fix)
#
# Vercel unterst√ºtzt beide Varianten:
# - REACT_APP_* f√ºr Frontend (CRA)
# - Ohne Pr√§fix f√ºr Serverless Functions (api/generate-expose.js)


# ==============================================================================
# SETUP-ANLEITUNG
# ==============================================================================

# 1. Kopiere diese Datei:
#    cp .env.example .env

# 2. F√ºlle die Werte aus (siehe Kommentare oben)

# 3. Starte die Entwicklungs-Umgebung:
#    # Terminal 1: Express-Proxy f√ºr GPT-Calls
#    node server/gpt-proxy.js
#
#    # Terminal 2: React-Frontend
#    pnpm start

# 4. √ñffne im Browser: http://localhost:3000


# ==============================================================================
# TROUBLESHOOTING
# ==============================================================================

# Problem: "Supabase env missing/invalid"
# L√∂sung: Pr√ºfe, ob REACT_APP_SUPABASE_URL eine g√ºltige URL ist (https://...)
#         und REACT_APP_SUPABASE_ANON_KEY gesetzt ist.

# Problem: "GPT-Proxy-Fehler"
# L√∂sung: Pr√ºfe, ob OPENAI_API_KEY in .env gesetzt ist
#         und server/gpt-proxy.js l√§uft (node server/gpt-proxy.js).

# Problem: "401 Unauthorized" bei GPT-Calls (Production)
# L√∂sung: Melde dich an (Login-Page). Der Access-Token wird automatisch
#         aus der Supabase-Session gelesen und an /api/generate-expose gesendet.


# ==============================================================================
# SICHERHEITS-HINWEISE
# ==============================================================================

# ‚úÖ .env ist in .gitignore (wird NICHT committed)
# ‚úÖ REACT_APP_SUPABASE_ANON_KEY ist public-safe (Row-Level-Security)
# ‚ùå OPENAI_API_KEY NIE ins Frontend (nur Server-Side!)
# ‚ùå OPENAI_API_KEY NIE in Git committen (.env.example zeigt nur Platzhalter)

# F√ºr Production (Vercel):
# - Env-Vars im Vercel Dashboard setzen (nicht in .env)
# - OPENAI_API_KEY als "Secret" markieren (nicht im Build-Log sichtbar)
